{
	"system": {
		"enums": {
			"gender": [
				"men",
				"women"
			],
			"marital_status": [
				"single",
				"married",
				"isolated",
				"unknow"
			],
			"education": [
				"phd",
				"diploma",
				"associate_degree",
				"bachelors_degree",
				"masters"
			],
			"military_status": [
				"included",
				"end",
				"exemption-edu",
				"exemption-spo"
			]
		},
		"errors": {
			"server_error": "Server Error",
			"bad_request": "Bad Request",
			"url_not_found": "Url NotFound",
			"too_many_requests": "Too Many Requests",
			"not_valid_image_format" : "The uploaded file is not an image",
			"not_valid_file_format" : "The uploaded file format is invalid"
		}
	},
	"auth": {
		"enums": {},
		"validations": {
			"pass_confirm_match": "Password and confirmation are not the same",
			"password_required": "The password field is required",
			"password_length": "The password field has a character limit",
			"firstname_required": "The firstname field is required",
			"username_required": "The username field is required",
			"firstname_length": "The firstname field has a character limit",
			"lastname_required": "The lastname field is required",
			"lastname_length": "The lastname field has a character limit",
			"mobile_required": "The mobile field is required",
			"mobile_pattern": "The mobile number entered is invalid"
		},
		"messages": {
			"user_successfuly_created": "The account was created successfully",
			"success_login": "You have successfully logged into your account",
			"success_logout": "You have successfully logged out",
			"token_verified": "Token Verified",
			"username_exist": "The username already exists"
		},
		"errors": {
			"user_already_exists": "There is already a user with this information",
			"invalid_credentials": "The username or password is incorrect",
			"username_notfound": "The username not found",
			"username_notsend": "The username not send",
			"token_not_same": "Token not same",
			"token_not_sended": "Authentication key not sent",
			"token_not_stored": "Authentication key not stored"
		}
	},
	"constant": {
		"messages": {
			"constant_list_found": "Constant successfuly created"
		}
	},
	"company": {
		"enums": {},
		"validations": {
			"company_id_require": "company is required",
			"company_id_invalid": "company invalid",
			"company_page_number": "company page must by number",
			"company_size_number": "company size must by number",
			"company_name_length": "company name lenght must grather than 3 character and less than 50 character",
			"company_description_length": "company description lenght must grather than 3 character and less than 100 character",
			"company_phone_length": "company description lenght must grather than 9 character and less than 12 character",
			"company_phone_number": "company phone should number",
			"company_address_length": "company address lenght must grather than 10 character and less than 200 character"
		},
		"messages": {
			"company_list_found": "Company list found",
			"company_successfuly_created": "Company successfuly created",
			"company_managers_found": "Company managers successfuly founded",
			"company_found": "Company Successfuly founded",
			"company_resumes_found": "Company resumes successfuly founded",
			"company_projects_found": "Company projects successfuly founded",
			"company_successfuly_updated": "Company successfuly updated",
			"company_manager_successfully_created": "company manager successfully created"
		},
		"errors": {
			"the_user_is_currently_an_manager_for_company": "The user is currently an manager for company",
			"the_user_is_not_manager_for_this_company": "This user is not  manager for this company",
			"the_owner_manager_cannot_be_deleted": "The owner manager cannot be deleted",
			"company_already_exists" : "company name is duplicated, already exists"
		}
	},
	"position": {
		"enums": {
			"level": [
				"senior",
				"mid",
				"junior"
			]
		},
		"validations": {
			"position_page_number": "position page must by number",
			"position_size_number": "position size must by number",
			"position_description_length": "position description must grather than 10 character and less than 100 character"
		},
		"messages": {
			"position_list_found": "position list",
			"position_found": "position found",
			"position_managers_found": "position managers successfuly founded",
			"position_resumes_found": "Position resumes successfuly founded"
		},
		"errors": {
			"position_notfound" : "position not found",
			"position_already_exists" : "position already exists",
			"position_successfuly_created" : "position successfuly created",
			"position_successfuly_updated" : "position successfuly updated",
			"position_successfuly_deleted" : "position successfuly deleted",
			"position_list_found": "position list",
			"position_found" : "position found",
			"position_managers_found" : "position managers successfuly founded",
			"position_resumes_found": "Position resumes successfuly founded"
		}
	},
	"project": {
		"enums": {},
		"validations": {
			"project_id_invalid": "project id invalid",
			"project_page_number": "project page must by number",
			"project_size_number": "project size must by number"
		},
		"messages": {
			"project_found": "Project Found",
			"project_successfully_created": "Project successfully Created",
			"project_successfully_updated": "Project successfully updated",
			"project_manager_successfully_updated": "Project manager successfully updated",
			"project_manager_successfully_deleted": "Project manager successfully deleted",		
			"project_successfully_deleted": "project successfully deleted",
			"project_resumes_found": "Project resumes successfuly founded",
			"project_managers_found" : "Project managers successfuly founded",
			"project_positions_found": "project positions successfully found"
		},
		"errors": {
			"the_user_is_currently_an_manager_for_project": "The user is currently an manager for project",
			"the_user_is_not_an_manager_for_project": "This user is not defined for the project",
			"the_owner_manager_cannot_be_deleted": "The owner manager cannot be deleted",
			"project_not_found" : "Project not found",
			"project_already_attached_company" : "Project already attached this company"
		}
	},
	"resume": {
		"enums": {
			"status": [
				"pending",
				"call_review",
				"tech_review",
				"wait_reject",
				"rejected",
				"hired",
				"wait_hire"
			],
			"call_history_status": [
				"rejected",
				"answered",
				"busy",
				"wrong-number",
				"recall"
			]
		},
		"validations": {
			"company_id_required": "resume.validation.company_id_required",
			"company_id_invalid": "resume.validation.company_id_invalid",
			"project_id_required": "resume.validation.project_id_required",
			"porject_id_invalid": "resume.validation.porject_id_invalid",
			"firstname_required": "resume.validation.firstname_required",
			"firstname_length": "resume.validation.firstname_length",
			"lastname_required": "resume.validation.lastname_required",
			"lastname_length": "resume.validation.lastname_length",
			"gender_required": "resume.validation.gender_required",
			"gender_incorrect": "resume.validation.gender_incorrect",
			"email_required": "resume.validation.email_required",
			"email_invalid": "resume.validation.email_invalid",
			"birth_year_required": "resume.validation.birth_year_required",
			"birth_year_number": "resume.validation.birth_year_number",
			"birth_year_length": "resume.validation.birth_year_length",
			"marital_status_required": "resume.validation.marital_status_required",
			"marital_status_incorrect": "resume.validation.marital_status_incorrect",
			"mobile_required": "resume.validation.mobile_required",
			"residence_city_required": "resume.validation.residence_city_required",
			"residence_city_invalid": "resume.validation.residence_city_invalid",
			"work_city_required": "resume.validation.work_city_required",
			"work_city_invalid": "resume.validation.work_city_invalid",
			"education_required": "resume.validation.education_required",
			"education_incorrect": "resume.validation.education_incorrect",
			"major_required": "resume.validation.major_required",
			"major_length": "resume.validation.major_length",
			"result_required": "result is required",
			"result_incorrect": "result is incorrect",
			"calling_date_required": "calling_date is required",
			"calling_date_must_be_date": "calling_date must be date",
			"description_length": "description length must be between 0 and 1000",
			"call_history_recall_at_required": "recall_at is required",
			"call_history_recall_at_invalid": "recall_at must be date"
		},
		"messages": {
			"resume_successfuly_created": "resume successfuly created",
			"resume_status_successfuly_updated": "resume successfuly updated",
			"resume_call_history_successfuly_created": "resume call history successfuly created",
			"max_comment_length": "Comment has be between 5 and 1000 character",
			"resume_page_number": "resume page must by number",
			"resume_size_number": "resume size must by number"
		},
		"errors": {
			"resume_notfound": "Sorry, Resume not found",
			"resume_comments_no_content": "Sorry, This resume  dont have any comment",
			"resume_comments_notfound": "Sorry, Resume not have any comment",
			"can_not_update_status_to_current": "It is not possible to update the status to the current status"
		}
	},
	"user": {
		"enums": {},
		"validations": {},
		"messages": {
			"user_founded": "user successfuly found",
			"list_found": "the list of users",
			"password_changed": "User password successfully changed"
		},
		"errors": {
			"user_notfound": "The desired user was not found",
			"password_length_not_confirm": "password length must be between 8-10",
			"password_cant_be_empty": "password cant be empty",
			"old_password_length_not_confirm": "old password length must be between 8-10",
			"old_password_cant_be_empty": "old password cant be empty",
			"incorrect_password": "The password is incorrect",
			"duplicate_password": "New password cant be duplicate with old password"
		}
	},
	"manager": {
		"enums": {},
		"validations": {},
		"messages": {
			"manager_successfuly_created": "manager successfuly set for position"
		},
		"errors": {
			"duplicate": "This manager set for this position already"
		}
	}
}