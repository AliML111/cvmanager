{
	"system": {
		"enums": {
			"gender": [
				"men",
				"women"
			],
			"marital_status": [
				"single",
				"married",
				"isolated",
				"unknow"
			],
			"education": [
				"phd",
				"diploma",
				"associate_degree",
				"bachelors_degree",
				"masters"
			],
			"military_status": [
				"included",
				"end",
				"exemption-edu",
				"exemption-spo"
			]
		},
		"errors": {
			"server_error": "Server Error",
			"bad_request": "Bad Request",
			"url_not_found": "Url NotFound",
			"too_many_requests": "Too Many Requests"
		}
	},
	"auth": {
		"enums": {},
		"validations": {
			"pass_confirm_match": "Password and confirmation are not the same",
			"password_required": "The password field is required",
			"password_length": "The password field has a character limit",
			"firstname_required": "The firstname field is required",
			"firstname_length": "The firstname field has a character limit",
			"lastname_required": "The lastname field is required",
			"lastname_length": "The lastname field has a character limit",
			"mobile_required": "The mobile field is required",
			"mobile_pattern": "The mobile number entered is invalid"
		},
		"messages": {
			"user_successfuly_created": "The account was created successfully",
			"success_login": "You have successfully logged into your account",
			"success_logout": "You have successfully logged out",
			"token_verified": "Token Verified"
		},
		"errors": {
			"user_already_exists": "There is already a user with this information",
			"invalid_credentials": "The username or password is incorrect",
			"token_not_same": "Token not same",
			"token_not_sended": "Authentication key not sent",
			"token_not_stored": "Authentication key not stored"
		}
	},
	"constant": {
		"messages": {
			"constant_list_found": "Constant successfuly created"
		}
	},
	"company": {
		"enums": {},
		"validations": {
			"company_id_require": "company is required",
			"company_id_invalid": "company invalid",
			"company_page_number": "company page must by number",
			"company_size_number": "company size must by number"
		},
		"messages": {
			"company_list_found": "Company list found",
			"company_successfuly_created": "Company successfuly created",
			"company_found": "Company Successfuly founded",
			"company_successfuly_updated": "Company successfuly updated",
			"company_manager_successfully_created": "company manager successfully created"
		},
		"errors": {
			"the_user_is_currently_an_manager_for_company": "The user is currently an manager for company",
			"the_user_is_not_manager_for_this_company": "This user is not  manager for this company"
		}
	},
	"position": {
		"enums": {
			"level": [
				"senior",
				"mid",
				"junior"
			]
		},
		"validations": {
			"position_page_number": "position page must by number",
			"position_size_number": "position size must by number"
		},
		"messages": {
			"position_successfuly_created": "Position successfuly created"
		},
		"errors": {
			"position_not_found": "position not found",
			"position_already_exists": "position already exists"
		}
	},
	"project": {
		"enums": {},
		"validations": {
			"project_id_invalid": "project id invalid"
		},
		"messages": {
			"project_found": "Project Found",
			"project_successfully_created": "Project successfully Created",
			"project_successfully_updated": "Project successfully updated",
			"project_manager_successfully_updated": "Project manager successfully updated",
			"project_manager_successfully_deleted": "Project manager successfully deleted",
			"project_successfully_deleted": "project successfully deleted"
		},
		"errors": {
			"the_user_is_currently_an_manager_for_project": "The user is currently an manager for project",
			"the_user_is_not_an_manager_for_project": "This user is not defined for the project",
			"the_owner_manager_cannot_be_deleted": "The owner manager cannot be deleted"
		}
	},
	"resume": {
		"enums": {
			"status": [
				"pending",
				"call_review",
				"tech_review",
				"wait_reject",
				"rejected",
				"hired",
				"wait_hire"
			]
		},
		"validations": {
			"company_id_required": "resume.validation.company_id_required",
			"company_id_invalid": "resume.validation.company_id_invalid",
			"project_id_required": "resume.validation.project_id_required",
			"porject_id_invalid": "resume.validation.porject_id_invalid",
			"firstname_required": "resume.validation.firstname_required",
			"firstname_length": "resume.validation.firstname_length",
			"lastname_required": "resume.validation.lastname_required",
			"lastname_length": "resume.validation.lastname_length",
			"gender_required": "resume.validation.gender_required",
			"gender_incorrect": "resume.validation.gender_incorrect",
			"email_required": "resume.validation.email_required",
			"email_invalid": "resume.validation.email_invalid",
			"birth_year_required": "resume.validation.birth_year_required",
			"birth_year_length": "resume.validation.birth_year_length",
			"marital_status_required": "resume.validation.marital_status_required",
			"marital_status_incorrect": "resume.validation.marital_status_incorrect",
			"mobile_required": "resume.validation.mobile_required",
			"residence_city_required": "resume.validation.residence_city_required",
			"residence_city_length": "resume.validation.residence_city_length",
			"work_city_required": "resume.validation.work_city_required",
			"work_city_length": "resume.validation.work_city_length",
			"education_required": "resume.validation.education_required",
			"education_incorrect": "resume.validation.education_incorrect",
			"major_required": "resume.validation.major_required",
			"major_length": "resume.validation.major_length",
			"max_comment_length": "Comment has be between 5 and 2000 character"
		},
		"messages": {
			"resume_successfuly_created": "resume successfuly created",
			"resume_comment_successfuly_created": "resume comment successfuly created",
			"resume_list_found": "resume comment list found"
		},
		"errors": {
			"resume_notfound": "Sorry, Resume not found",
			"resume_comments_notfound": "Sorry, Resume not have any comment",
			"can_not_update_status_to_current": "It is not possible to update the status to the current status"
		}
	},
	"user": {
		"enums": {},
		"validations": {},
		"messages": {
			"user_founded": "user successfuly found",
			"list_found": "the list of users"
		},
		"errors": {
			"user_notfound": "The desired user was not found"
		}
	},
	"manager": {
		"enums": {},
		"validations": {},
		"messages": {
			"manager_successfuly_created": "manager successfuly set for position"
		},
		"errors": {
			"duplicate": "This manager set for this position already"
		}
	}
}