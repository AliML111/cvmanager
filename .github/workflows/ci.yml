name: CI

on:
  #push:
   # branches:
    #  - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:
  
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
  
jobs:
  CI:
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Setup buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Cache Docker layers
        uses: actions/cache@v3.3.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          outputs: type=docker,dest=/tmp/cvmanager.tar
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
          tags: |
            cvmanager/img:back-latest
            cvmanager/img:back-v1.${{ github.run_number }}

      - name: Upload artifact 
        uses: actions/upload-artifact@v2
        with:
          name: docker
          path: /tmp/cvmanager.tar

  Test:
    runs-on: ubuntu-latest
    steps: 
      - name: Add env files
        run: |
         echo "${{ secrets.ENV_FILE }}" > ./.env
         echo "${{ secrets.ENV_MONGO }}" > ./.env_mongo
         echo "${{ secrets.GOOGLE_APPLICATION_CREDS }}" > ./google-application-credentials.json
      
      - name: Download Docker image from earlier
        uses: actions/upload-artifact@v4
        with:
          name: docker
          path: /tmp/cvmanager.tar

      - name: Load the image
        run: |
         docker load --input /tmp/cvmanager.tar
         docker image ls -a
          
      - name: Start Docker Compose
        run: |
          sed -i 's/digest/cvmanager/g' ./docker-compose.yaml
          docker compose up -d

      - name: Run tests
        run: |
          docker exec cv_app npm run test
        continue-on-error: true
     
      - name: Docker login
        uses: docker/login-action@v3.0.0
        with:
          username: cvmanager
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Push Docker image
        run: |
          docker push cvmanager/img:back-latest
          docker push cvmanager/img:back-v1.${{ github.run_number }}

      - name: Cache docker-compose.yaml for deployment
        id: cache-docker
        uses: actions/cache@v3.3.2
        env:
          cache-name: cache-docker-compose
        with:
          path: ./docker-compose.yaml
          key: docker-compose.yaml
          restore-keys: |
           docker-compose.yaml
           docker-compose
           docker
      #- uses: actions/upload-artifact@v4
      #  with:
      #    name: docker-compose.yaml
      #    path: ./docker-compose.yaml

      #- name: Minio push
      #  run: |
      #    docker cp docker-compose.yaml minio:/
      #    docker exec minio mc cp /docker-compose.yaml env/${{ secrets.BUCKET_DEPLOY }} && docker rm -f minio
     
  Release:
    runs-on: ubuntu:latest
    steps:
      - name: Release the changes
        uses: actions/create-release@v1.1.4
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.${{ github.run_number }}
          release_name: Release v1.${{ github.run_number }}
          
  Cleanup:
    name: Cleanup actions
    needs:
      - Release
    runs-on: ubuntu-latest
    steps:
      - name: "Remove build artifacts"
        uses: geekyeggo/delete-artifact@v1
        with:
          name: docker
        
  
          
     
      

  
