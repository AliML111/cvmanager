stages:
  - init
  - build
  - test
  - push
  - deploy
  - rollback


#variables:
 # NODE_ENV: "development"
auto_increment:
  stage: init
  variables:
    VAR_NAME: BUILD_NUMBER
    VAR: ${BUILD_NUMBER}
    TOKEN: ${CI_PIPELINE_IID_TOKEN}
  script:
  - " i=$((VAR + 1)) "
  - " curl -X PUT -s -f --header \"PRIVATE-TOKEN: ${TOKEN}\" \"https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/variables/${VAR_NAME}\" -d \"value=${i}\" "
  - "echo $i"
  tags:
    - cv
    - beta


build-develop:
  stage: build
  script:
    - echo "Building the image...."
    - docker build -t img:back-dev-v1.0 .
    # --build-arg NODE_ENV=$NODE_ENV 
  tags:
    - cv
    - beta

test:
  stage: test
  before_script:
    #- git pull
    - cd /app/cvmanager/backend
    - wget -nc 'https://api.s3bucket.cloud/env/.env'
    - wget -nc 'https://api.s3bucket.cloud/env/google-application-credentials.json'
    - wget -nc 'https://api.s3bucket.cloud/env/.env_mongo'
  script:
    - docker compose up -d
    - docker exec cv_app npm run test
  tags:
    - cv
    - beta
  needs:
    - build-develop

push:
  stage: push
  script:
    - docker tag img:back-dev-v1.0 cvmanager/img:back-dev-latest
    - docker push cvmanager/img:back-dev-latest
  tags:
    - cv
    - beta
  needs:
    - test

deploy-develop:
  stage: deploy
  before_script:
    #- git pull
    - cd /app/cvmanager/backend
    - wget -nc 'https://api.s3bucket.cloud/env/.env'
    - wget -nc 'https://api.s3bucket.cloud/env/google-application-credentials.json'
    - wget -nc 'https://api.s3bucket.cloud/env/.env_mongo'
  script:
    - docker compose up -d
  environment: develop
  tags:
    - cv
    - beta
  when: manual

rollback:
  stage: rollback
  before_script:
    - cd /app/cvmanager/backend
    - docker tag cvmanager/img:back-dev-v1.0 cvmanager/img:back-dev-latest
  script:
    - docker compose up -d
  environment: develop
  tags:
    - cv
    - beta
  when: manual
