stages:
  - build
  - test
  - push
  - deploy
  - rollback


#variables:
 # NODE_ENV: "development"


build-develop:
  stage: build
  before_script:
    - cd /app/cvmanager/backend
  script:
    - echo "Building the image...."
    - docker build -t img:back-dev-v1.0 .
    # --build-arg NODE_ENV=$NODE_ENV 
  tags:
    - cv
    - beta

#test:
#  stage: test
#  before_script:
    #- git pull
#    - cd /app/cvmanager/backend
#    - wget -nc 'https://api.s3bucket.cloud/env/.env'
#    - wget -nc 'https://api.s3bucket.cloud/env/google-application-credentials.json'
#    - wget -nc 'https://api.s3bucket.cloud/env/.env_mongo'
#  script:
#    - docker compose up -d
#    - docker exec cv_app npm run test
#  tags:
#    - cv
#    - beta
#  needs:
#    - build-develop

push:
  stage: push
  script:
    #- git pull
    - docker tag img:back-dev-v1.0 cvmanager/img:back-dev-latest
    - docker push cvmanager/img:back-dev-latest
  tags:
    - cv
    - beta
  #needs:
   # - test

deploy-develop:
  stage: deploy
  before_script:
    #- git pull
    - cd /app/cvmanager/backend
    - wget -nc 'https://api.s3bucket.cloud/env/.env'
    - wget -nc 'https://api.s3bucket.cloud/env/google-application-credentials.json'
    - wget -nc 'https://api.s3bucket.cloud/env/.env_mongo'
  script:
    - docker compose up -d
  environment: develop
  tags:
    - cv
    - beta
  when: manual

rollback:
  stage: rollback
  before_script:
    - cd /app/cvmanager/backend
    - docker tag cvmanager/img:back-dev-v1.0 cvmanager/img:back-dev-latest
  script:
    - docker compose up -d
  environment: develop
  tags:
    - cv
    - beta
  when: manual
