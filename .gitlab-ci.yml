workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_COMMIT_BRANCH == 'develop'
    #- if: $CI_COMMIT_BRANCH == 'develop' || $CI_COMMIT_BRANCH == 'master'

stages:
  - build
  - test
  - push
  - deploy
  - rollback


#variables:
 # NODE_ENV: "development"


build:
  stage: build
  only:
    - develop
  script:
    - echo "Building the image...."
    - docker build -t img:back-v1.0 .
    # --build-arg NODE_ENV=$NODE_ENV 
  tags:
    - cv
    - beta

test:
  stage: test
  before_script:
    #- git pull
    - cd /app/cvmanager/backend
    - wget -nc 'https://api.s3bucket.cloud/env/.env'
    - wget -nc 'https://api.s3bucket.cloud/env/google-application-credentials.json'
    - wget -nc 'https://api.s3bucket.cloud/env/.env_mongo'
  script:
    - docker compose up -d
    #- docker exec cv_app npm run test
  tags:
    - cv
    - beta
  needs:
    - build

push:
  stage: push
  only:
    - develop
  script:
    - docker tag img:back-v1.0 cvmanager/img:back-latest
    - docker push cvmanager/img:back-latest
  tags:
    - cv
    - beta
  needs:
    - test

deploy:
  stage: deploy
  only:
    - develop
  before_script:
    #- git pull
    - cd /app/cvmanager/backend
    - wget -nc 'https://api.s3bucket.cloud/env/.env'
    - wget -nc 'https://api.s3bucket.cloud/env/google-application-credentials.json'
    - wget -nc 'https://api.s3bucket.cloud/env/.env_mongo'
  script:
    - docker compose up -d
  environment: develop
  tags:
    - cv
    - beta
  when: manual

rollback:
  stage: rollback
  only:
    - develop
  before_script:
    - cd /app/cvmanager/backend
    - docker tag cvmanager/img:back-v1.0 cvmanager/img:back-latest
    - docker push cvmanager/img:back-latest
  script:
    - docker compose up -d
  environment: develop
  tags:
    - cv
    - beta
  when: manual
